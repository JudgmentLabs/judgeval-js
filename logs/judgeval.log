2025-04-10 03:33:43 - judgeval - info - Logging enabled
2025-04-10 03:33:43 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-ar' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:43 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:43 - judgeval - info - Initialized example 63de5892-020f-422e-aeb3-3ed7f0c53270 (index: 0)
2025-04-10 03:33:43 - judgeval - info - Input: What's the capital of France?
2025-04-10 03:33:43 - judgeval - info - Actual output: The capital of France is Paris.
2025-04-10 03:33:43 - judgeval - info - Initialized example bc11eb76-acad-4444-b143-b5682100a5e2 (index: 1)
2025-04-10 03:33:43 - judgeval - info - Input: What's the capital of France?
2025-04-10 03:33:43 - judgeval - info - Actual output: There's a lot to do in Marseille. Lots of bars, restaurants, and museums.
2025-04-10 03:33:43 - judgeval - info - Starting evaluation run with 2 examples
2025-04-10 03:33:43 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:43 - judgeval - info - Added judgment scorer: AnswerRelevancyScorer
2025-04-10 03:33:43 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:43 - judgeval - warn - Scorer answer_relevancy requires expectedOutput field
2025-04-10 03:33:43 - judgeval - warn - Scorer answer_relevancy requires expectedOutput field
2025-04-10 03:33:43 - judgeval - info - Starting API evaluation
2025-04-10 03:33:43 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:43 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:43 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:46 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[{"name":"Answer Relevancy","threshold":0.7,"success":true,"score":1,"reason":"The score is 1.00 because the answer is directly relevant to the input questio...
2025-04-10 03:33:46 - judgeval - info - Received 2 results from API
2025-04-10 03:33:46 - judgeval - info - Processing API results
2025-04-10 03:33:46 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [
    {
      "name": "Answer Relevancy",
      "threshold": 0.7,
      "success": true,
      "score": 1,
      "reason": "The score is 1.00 because the answer is directly relevant to the input question, providing the correct capital of France. The answer is concise and accurate, making it a perfect match for the input.",
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": null,
      "evaluation...
2025-04-10 03:33:46 - judgeval - info - Processing result 0:
2025-04-10 03:33:46 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:46 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:46 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:46 - judgeval - info - - First scorer: {"name":"Answer Relevancy","threshold":0.7,"success":true,"score":1,"reason":"The score is 1.00 because the answer is directly relevant to the input question, providing the correct capital of France. The answer is concise and accurate, making it a perfect match for the input.","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:46 - judgeval - info - Processing result 1:
2025-04-10 03:33:46 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:46 - judgeval - info - - WARNING: No example data in result 1
2025-04-10 03:33:46 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:46 - judgeval - info - - First scorer: {"name":"Answer Relevancy","threshold":0.7,"success":false,"score":0,"reason":"The score is 0.00 because the answer is completely irrelevant to the input question 'What's the capital of France?' The model's output is filled with statements about Marseille, bars, restaurants, and museums, which are not related to the capital of France. The score is fair because the model's output does not provide any relevant information about the capital of France, making it a complete mismatch.","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:46 - judgeval - info - Merging API and local results
2025-04-10 03:33:46 - judgeval - info - Successfully merged 2 results
2025-04-10 03:33:46 - judgeval - info - Logging enabled
2025-04-10 03:33:46 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-ac' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:46 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:46 - judgeval - info - Initialized example b1d1774d-4441-4d17-804e-b85939043889 (index: 0)
2025-04-10 03:33:46 - judgeval - info - Input: What is the capital of France?
2025-04-10 03:33:46 - judgeval - info - Actual output: The capital of France is Paris.
2025-04-10 03:33:46 - judgeval - info - Expected output: Paris is the capital of France.
2025-04-10 03:33:46 - judgeval - info - Initialized example 4b0409cd-09c3-4ebe-8af6-c2ceb899f73f (index: 1)
2025-04-10 03:33:46 - judgeval - info - Input: What is the tallest mountain in the world?
2025-04-10 03:33:46 - judgeval - info - Actual output: Mount Everest is the tallest mountain in the world.
2025-04-10 03:33:46 - judgeval - info - Expected output: Mount Everest is the tallest mountain in the world.
2025-04-10 03:33:46 - judgeval - info - Starting evaluation run with 2 examples
2025-04-10 03:33:46 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:46 - judgeval - info - Added judgment scorer: AnswerCorrectnessScorer
2025-04-10 03:33:46 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:46 - judgeval - info - Starting API evaluation
2025-04-10 03:33:46 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:46 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:46 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:48 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[{"name":"Answer Correctness","threshold":0.7,"success":true,"score":1,"reason":"The score is 1.00 because the model's output perfectly matches the expected ...
2025-04-10 03:33:48 - judgeval - info - Received 2 results from API
2025-04-10 03:33:48 - judgeval - info - Processing API results
2025-04-10 03:33:48 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [
    {
      "name": "Answer Correctness",
      "threshold": 0.7,
      "success": true,
      "score": 1,
      "reason": "The score is 1.00 because the model's output perfectly matches the expected output, indicating 100% accuracy and relevance.",
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": null,
      "evaluation_cost": null,
      "verbose_logs": null,
      "additional_metadata": nu...
2025-04-10 03:33:48 - judgeval - info - Processing result 0:
2025-04-10 03:33:48 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:48 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:48 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:48 - judgeval - info - - First scorer: {"name":"Answer Correctness","threshold":0.7,"success":true,"score":1,"reason":"The score is 1.00 because the model's output perfectly matches the expected output, indicating 100% accuracy and relevance.","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:48 - judgeval - info - Processing result 1:
2025-04-10 03:33:48 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:48 - judgeval - info - - WARNING: No example data in result 1
2025-04-10 03:33:48 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:48 - judgeval - info - - First scorer: {"name":"Answer Correctness","threshold":0.7,"success":true,"score":1,"reason":"The score is 1.00 because the model's output perfectly matches the expected output, indicating 100% accuracy and relevance.","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:48 - judgeval - info - Merging API and local results
2025-04-10 03:33:48 - judgeval - info - Successfully merged 2 results
2025-04-10 03:33:48 - judgeval - info - Logging enabled
2025-04-10 03:33:48 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-faith' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:48 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:48 - judgeval - info - Initialized example f475d443-2294-4133-8478-ada46f77fc9e (index: 0)
2025-04-10 03:33:48 - judgeval - info - Input: What's the capital of France?
2025-04-10 03:33:48 - judgeval - info - Actual output: The capital of France is Paris. It's known for the Eiffel Tower.
2025-04-10 03:33:48 - judgeval - info - Context: France is a country in Western Europe.,Paris is the capital of France.,The Eiffel Tower is a landmark in Paris.
2025-04-10 03:33:48 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:48 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:48 - judgeval - info - Added judgment scorer: FaithfulnessScorer
2025-04-10 03:33:48 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:48 - judgeval - info - Starting API evaluation
2025-04-10 03:33:48 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:48 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:48 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:48 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[],"name":null,"data_object":{"example_id":"f475d443-2294-4133-8478-ada46f77fc9e","input":"What's the capital of France?","actual_output":"The capital of Fra...
2025-04-10 03:33:48 - judgeval - info - Received 1 results from API
2025-04-10 03:33:48 - judgeval - info - Processing API results
2025-04-10 03:33:48 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [],
  "name": null,
  "data_object": {
    "example_id": "f475d443-2294-4133-8478-ada46f77fc9e",
    "input": "What's the capital of France?",
    "actual_output": "The capital of France is Paris. It's known for the Eiffel Tower.",
    "expected_output": null,
    "context": [
      "France is a country in Western Europe.",
      "Paris is the capital of France.",
      "The Eiffel Tower is a landmark in Paris."
    ],
    "retrieval_context": null,
    "ad...
2025-04-10 03:33:48 - judgeval - info - Processing result 0:
2025-04-10 03:33:48 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:48 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:48 - judgeval - info - - WARNING: No scorers_data in result 0
2025-04-10 03:33:48 - judgeval - info - Merging API and local results
2025-04-10 03:33:48 - judgeval - error - Scorer data is missing for example 0. This is usually caused when the example does not contain the fields required by the scorer. Check that your example contains the fields required by the scorers.
2025-04-10 03:33:48 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:48 - judgeval - info - None of the scorers could be executed on example 0. This is usually because the Example is missing the fields needed by the scorers. Try checking that the Example has the necessary fields for your scorers.
2025-04-10 03:33:48 - judgeval - info - Logging enabled
2025-04-10 03:33:48 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-hall' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:49 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:49 - judgeval - info - Initialized example 49dadbf8-7aa9-4f5c-9f97-463c9982adb6 (index: 0)
2025-04-10 03:33:49 - judgeval - info - Input: What's the capital of France?
2025-04-10 03:33:49 - judgeval - info - Actual output: The capital of France is Paris, which is known for its beautiful beaches and tropical climate.
2025-04-10 03:33:49 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:49 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:49 - judgeval - info - Added judgment scorer: HallucinationScorer
2025-04-10 03:33:49 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:49 - judgeval - info - Starting API evaluation
2025-04-10 03:33:49 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:49 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:49 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:49 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[],"name":null,"data_object":{"example_id":"49dadbf8-7aa9-4f5c-9f97-463c9982adb6","input":"What's the capital of France?","actual_output":"The capital of Fra...
2025-04-10 03:33:49 - judgeval - info - Received 1 results from API
2025-04-10 03:33:49 - judgeval - info - Processing API results
2025-04-10 03:33:49 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [],
  "name": null,
  "data_object": {
    "example_id": "49dadbf8-7aa9-4f5c-9f97-463c9982adb6",
    "input": "What's the capital of France?",
    "actual_output": "The capital of France is Paris, which is known for its beautiful beaches and tropical climate.",
    "expected_output": null,
    "context": null,
    "retrieval_context": null,
    "additional_metadata": null,
    "tools_called": null,
    "expected_tools": null,
    "name": null,
    "created_...
2025-04-10 03:33:49 - judgeval - info - Processing result 0:
2025-04-10 03:33:49 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:49 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:49 - judgeval - info - - WARNING: No scorers_data in result 0
2025-04-10 03:33:49 - judgeval - info - Merging API and local results
2025-04-10 03:33:49 - judgeval - error - Scorer data is missing for example 0. This is usually caused when the example does not contain the fields required by the scorer. Check that your example contains the fields required by the scorers.
2025-04-10 03:33:49 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:49 - judgeval - info - None of the scorers could be executed on example 0. This is usually because the Example is missing the fields needed by the scorers. Try checking that the Example has the necessary fields for your scorers.
2025-04-10 03:33:49 - judgeval - info - Logging enabled
2025-04-10 03:33:49 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-context' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:49 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:49 - judgeval - info - Initialized example aac9989c-4476-4037-99ca-2a22c037805f (index: 0)
2025-04-10 03:33:49 - judgeval - info - Input: Based on the context, what is the capital of France?
2025-04-10 03:33:49 - judgeval - info - Actual output: According to the context, the capital of France is Paris.
2025-04-10 03:33:49 - judgeval - info - Context: France is a country in Western Europe.,Paris is the capital and most populous city of France.,The Eiffel Tower is located in Paris.
2025-04-10 03:33:49 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:49 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:49 - judgeval - info - Added judgment scorer: ContextualRelevancyScorer
2025-04-10 03:33:49 - judgeval - info - Added judgment scorer: ContextualPrecisionScorer
2025-04-10 03:33:49 - judgeval - info - Added judgment scorer: ContextualRecallScorer
2025-04-10 03:33:49 - judgeval - info - Found 3 judgment scorers and 0 local scorers
2025-04-10 03:33:49 - judgeval - info - Starting API evaluation
2025-04-10 03:33:49 - judgeval - info - Creating API evaluation run with 3 scorers
2025-04-10 03:33:49 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:49 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:49 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[],"name":null,"data_object":{"example_id":"aac9989c-4476-4037-99ca-2a22c037805f","input":"Based on the context, what is the capital of France?","actual_outp...
2025-04-10 03:33:49 - judgeval - info - Received 1 results from API
2025-04-10 03:33:49 - judgeval - info - Processing API results
2025-04-10 03:33:49 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [],
  "name": null,
  "data_object": {
    "example_id": "aac9989c-4476-4037-99ca-2a22c037805f",
    "input": "Based on the context, what is the capital of France?",
    "actual_output": "According to the context, the capital of France is Paris.",
    "expected_output": null,
    "context": [
      "France is a country in Western Europe.",
      "Paris is the capital and most populous city of France.",
      "The Eiffel Tower is located in Paris."
    ],
  ...
2025-04-10 03:33:49 - judgeval - info - Processing result 0:
2025-04-10 03:33:49 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:49 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:49 - judgeval - info - - WARNING: No scorers_data in result 0
2025-04-10 03:33:49 - judgeval - info - Merging API and local results
2025-04-10 03:33:49 - judgeval - error - Scorer data is missing for example 0. This is usually caused when the example does not contain the fields required by the scorer. Check that your example contains the fields required by the scorers.
2025-04-10 03:33:49 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:49 - judgeval - info - None of the scorers could be executed on example 0. This is usually because the Example is missing the fields needed by the scorers. Try checking that the Example has the necessary fields for your scorers.
2025-04-10 03:33:49 - judgeval - info - Logging enabled
2025-04-10 03:33:49 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-summ' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:49 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:49 - judgeval - info - Initialized example 9babf3c6-65e1-4fe8-820d-10daa1e94d1c (index: 0)
2025-04-10 03:33:49 - judgeval - info - Input: Summarize the following text: France is a country in Western Europe. Paris is the capital of France. The Eiffel Tower is located in Paris.
2025-04-10 03:33:49 - judgeval - info - Actual output: France is a Western European country with Paris as its capital, home to the Eiffel Tower.
2025-04-10 03:33:49 - judgeval - info - Expected output: France is a Western European country. Paris is its capital and has the Eiffel Tower.
2025-04-10 03:33:49 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:49 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:49 - judgeval - info - Added judgment scorer: SummarizationScorer
2025-04-10 03:33:49 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:49 - judgeval - info - Starting API evaluation
2025-04-10 03:33:49 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:49 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:49 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:52 - judgeval - info - API Response: {"results":[{"success":false,"scorers_data":[{"name":"Summarization","threshold":0.7,"success":false,"score":0.6666666666666666,"reason":"The score of 0.67 reflects issues with geographical accuracy. ...
2025-04-10 03:33:52 - judgeval - info - Received 1 results from API
2025-04-10 03:33:52 - judgeval - info - Processing API results
2025-04-10 03:33:52 - judgeval - info - API response structure: {
  "success": false,
  "scorers_data": [
    {
      "name": "Summarization",
      "threshold": 0.7,
      "success": false,
      "score": 0.6666666666666666,
      "reason": "The score of 0.67 reflects issues with geographical accuracy. The summary contains a factual error about the location of the Eiffel Tower, stating it is in France when the original text clearly states it is in Paris. Despite this, the summary does not contain any other significant errors or omissions.",
      "strict_mo...
2025-04-10 03:33:52 - judgeval - info - Processing result 0:
2025-04-10 03:33:52 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:52 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:52 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:52 - judgeval - info - - First scorer: {"name":"Summarization","threshold":0.7,"success":false,"score":0.6666666666666666,"reason":"The score of 0.67 reflects issues with geographical accuracy. The summary contains a factual error about the location of the Eiffel Tower, stating it is in France when the original text clearly states it is in Paris. Despite this, the summary does not contain any other significant errors or omissions.","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:52 - judgeval - info - Merging API and local results
2025-04-10 03:33:52 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:52 - judgeval - info - Logging enabled
2025-04-10 03:33:52 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-json' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:53 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:53 - judgeval - info - Initialized example 6681adc7-868e-4058-a69a-0cd5044fef14 (index: 0)
2025-04-10 03:33:53 - judgeval - info - Input: Convert this to JSON: Name: John, Age: 30, City: New York
2025-04-10 03:33:53 - judgeval - info - Actual output: {"name": "John", "age": 30, "city": "New York"}
2025-04-10 03:33:53 - judgeval - info - Expected output: {"name": "John", "age": 30, "city": "New York"}
2025-04-10 03:33:53 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:53 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:53 - judgeval - info - Added judgment scorer: JsonCorrectnessScorer
2025-04-10 03:33:53 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:53 - judgeval - info - Starting API evaluation
2025-04-10 03:33:53 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:53 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:53 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:53 - judgeval - info - API Response: {"results":[{"success":false,"scorers_data":[{"name":"json_correctness","threshold":0.7,"success":false,"score":null,"reason":null,"strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Ins...
2025-04-10 03:33:53 - judgeval - info - Received 1 results from API
2025-04-10 03:33:53 - judgeval - info - Processing API results
2025-04-10 03:33:53 - judgeval - info - API response structure: {
  "success": false,
  "scorers_data": [
    {
      "name": "json_correctness",
      "threshold": 0.7,
      "success": false,
      "score": null,
      "reason": null,
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": "You must implement the `a_score_example` method in your custom scorer",
      "evaluation_cost": null,
      "verbose_logs": null,
      "additional_metadata": null
    }
  ],
  "name": null,
  "data_object": {
  ...
2025-04-10 03:33:53 - judgeval - info - Processing result 0:
2025-04-10 03:33:53 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:53 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:53 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:53 - judgeval - info - - First scorer: {"name":"json_correctness","threshold":0.7,"success":false,"score":null,"reason":null,"strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":"You must implement the `a_score_example` method in your custom scorer","evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:53 - judgeval - info - Merging API and local results
2025-04-10 03:33:53 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:53 - judgeval - info - Logging enabled
2025-04-10 03:33:53 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-ia' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:53 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:53 - judgeval - info - Initialized example 3caf32a1-d4e7-4ceb-8a23-91bf21fe9734 (index: 0)
2025-04-10 03:33:53 - judgeval - info - Input: List three European capitals.
2025-04-10 03:33:53 - judgeval - info - Actual output: Three European capitals are Paris, London, and Berlin.
2025-04-10 03:33:53 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:53 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:53 - judgeval - info - Added judgment scorer: InstructionAdherenceScorer
2025-04-10 03:33:53 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:53 - judgeval - info - Starting API evaluation
2025-04-10 03:33:53 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:53 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:53 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:55 - judgeval - info - API Response: {"results":[{"success":true,"scorers_data":[{"name":"Instruction Adherence","threshold":0.7,"success":true,"score":1,"reason":"[Verdict(instruction='List three European capitals.', analysis='The LLM o...
2025-04-10 03:33:55 - judgeval - info - Received 1 results from API
2025-04-10 03:33:55 - judgeval - info - Processing API results
2025-04-10 03:33:55 - judgeval - info - API response structure: {
  "success": true,
  "scorers_data": [
    {
      "name": "Instruction Adherence",
      "threshold": 0.7,
      "success": true,
      "score": 1,
      "reason": "[Verdict(instruction='List three European capitals.', analysis='The LLM output listed three European capitals: Paris, London, and Berlin.', score=1.0)]",
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": null,
      "evaluation_cost": null,
      "verbose_logs": null,
...
2025-04-10 03:33:55 - judgeval - info - Processing result 0:
2025-04-10 03:33:55 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:55 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:55 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:55 - judgeval - info - - First scorer: {"name":"Instruction Adherence","threshold":0.7,"success":true,"score":1,"reason":"[Verdict(instruction='List three European capitals.', analysis='The LLM output listed three European capitals: Paris, London, and Berlin.', score=1.0)]","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:55 - judgeval - info - Merging API and local results
2025-04-10 03:33:55 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:55 - judgeval - info - Logging enabled
2025-04-10 03:33:55 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-comp' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:55 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:55 - judgeval - info - Initialized example 2d992222-b644-4b6c-af6a-0eb153151b62 (index: 0)
2025-04-10 03:33:55 - judgeval - info - Input: Which is better for a beginner, Python or C++?
2025-04-10 03:33:55 - judgeval - info - Actual output: Python is generally considered better for beginners because of its simpler syntax and readability.
2025-04-10 03:33:55 - judgeval - info - Expected output: Python is often recommended for beginners due to its readable syntax and gentle learning curve.
2025-04-10 03:33:55 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:55 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:55 - judgeval - info - Added judgment scorer: ComparisonScorer
2025-04-10 03:33:55 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:55 - judgeval - info - Starting API evaluation
2025-04-10 03:33:55 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:55 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:55 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:55 - judgeval - info - API Response: {"results":[{"success":false,"scorers_data":[{"name":"comparison","threshold":0.5,"success":false,"score":null,"reason":null,"strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-...
2025-04-10 03:33:55 - judgeval - info - Received 1 results from API
2025-04-10 03:33:55 - judgeval - info - Processing API results
2025-04-10 03:33:55 - judgeval - info - API response structure: {
  "success": false,
  "scorers_data": [
    {
      "name": "comparison",
      "threshold": 0.5,
      "success": false,
      "score": null,
      "reason": null,
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": "You must implement the `a_score_example` method in your custom scorer",
      "evaluation_cost": null,
      "verbose_logs": null,
      "additional_metadata": null
    }
  ],
  "name": null,
  "data_object": {
    "exa...
2025-04-10 03:33:55 - judgeval - info - Processing result 0:
2025-04-10 03:33:55 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:55 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:55 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:55 - judgeval - info - - First scorer: {"name":"comparison","threshold":0.5,"success":false,"score":null,"reason":null,"strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":"You must implement the `a_score_example` method in your custom scorer","evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:55 - judgeval - info - Merging API and local results
2025-04-10 03:33:55 - judgeval - info - Successfully merged 1 results
2025-04-10 03:33:55 - judgeval - info - Logging enabled
2025-04-10 03:33:55 - judgeval - info - Checking if eval run name 'all-scorers-eval-1744281223653-eo' exists for project 'js-sdk-all-scorers'
2025-04-10 03:33:55 - judgeval - info - Initializing examples with IDs and timestamps
2025-04-10 03:33:55 - judgeval - info - Initialized example fdbccde1-fb6f-46f0-a1b3-fdf82b579a81 (index: 0)
2025-04-10 03:33:55 - judgeval - info - Input: Describe the steps to make a sandwich.
2025-04-10 03:33:55 - judgeval - info - Actual output: 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich.
2025-04-10 03:33:55 - judgeval - info - Expected output: 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich.
2025-04-10 03:33:55 - judgeval - info - Starting evaluation run with 1 examples
2025-04-10 03:33:55 - judgeval - info - Grouping scorers by type
2025-04-10 03:33:55 - judgeval - info - Added judgment scorer: ExecutionOrderScorer
2025-04-10 03:33:55 - judgeval - info - Found 1 judgment scorers and 0 local scorers
2025-04-10 03:33:55 - judgeval - warn - Scorer execution_order requires expectedTools field
2025-04-10 03:33:55 - judgeval - info - Starting API evaluation
2025-04-10 03:33:55 - judgeval - info - Creating API evaluation run with 1 scorers
2025-04-10 03:33:55 - judgeval - info - Sending request to Judgment API
2025-04-10 03:33:55 - judgeval - info - Executing API evaluation...
2025-04-10 03:33:55 - judgeval - info - API Response: {"results":[{"success":false,"scorers_data":[{"name":"Execution Order","threshold":1,"success":false,"score":0,"reason":"Incomplete tool usage: missing tools []; expected 1. Get bread. 2. Add condimen...
2025-04-10 03:33:55 - judgeval - info - Received 1 results from API
2025-04-10 03:33:55 - judgeval - info - Processing API results
2025-04-10 03:33:55 - judgeval - info - API response structure: {
  "success": false,
  "scorers_data": [
    {
      "name": "Execution Order",
      "threshold": 1,
      "success": false,
      "score": 0,
      "reason": "Incomplete tool usage: missing tools []; expected 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich., called 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich..",
      "strict_mode": null,
      "evaluation_model": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
      "error": null,
      "evalu...
2025-04-10 03:33:55 - judgeval - info - Processing result 0:
2025-04-10 03:33:55 - judgeval - info - - Keys: ["success","scorers_data","name","data_object","trace_id","run_duration","evaluation_cost"]
2025-04-10 03:33:55 - judgeval - info - - WARNING: No example data in result 0
2025-04-10 03:33:55 - judgeval - info - - Found 1 scorer data entries
2025-04-10 03:33:55 - judgeval - info - - First scorer: {"name":"Execution Order","threshold":1,"success":false,"score":0,"reason":"Incomplete tool usage: missing tools []; expected 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich., called 1. Get bread. 2. Add condiments. 3. Add fillings. 4. Close the sandwich..","strict_mode":null,"evaluation_model":"meta-llama/Meta-Llama-3-8B-Instruct-Turbo","error":null,"evaluation_cost":null,"verbose_logs":null,"additional_metadata":null}
2025-04-10 03:33:55 - judgeval - info - Merging API and local results
2025-04-10 03:33:55 - judgeval - info - Successfully merged 1 results
